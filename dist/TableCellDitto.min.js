var t,e,n,i,a=this&&this.__classPrivateFieldSet||function(t,e,n){if(!e.has(t))throw new TypeError("attempted to set private field on non-instance");return e.set(t,n),n},s=this&&this.__classPrivateFieldGet||function(t,e){if(!e.has(t))throw new TypeError("attempted to get private field on non-instance");return e.get(t)};import d from"../node_modules/@saekitominaga/htmlelement-text/dist/HtmlElementText.js";export default class{constructor(s,l='"'){t.set(this,void 0),e.set(this,void 0),n.set(this,0),i.set(this,void 0),a(this,t,s),a(this,e,l);const o=s.querySelector("tbody td");if(null!==o){const t=new d(o);a(this,n,t.getWidth(l))}a(this,i,void 0!==s.attributeStyleMap)}convert(){for(const a of s(this,t).getElementsByTagName("tbody")){const t=[],l=[];let o=1,r=1,p=0;for(const c of a.getElementsByTagName("tr")){if(1===o){let a=!1,h=0;for(const g of c.getElementsByTagName("td")){if(null===g.firstChild)t[h]="";else{const a=g.textContent,r=g.rowSpan;if(r>o?o=r:r<o&&l.push(h),!l.includes(h)&&p>0&&a===t[h]&&(r>1||1===o&&1===r)){if(s(this,i))switch(g.computedStyleMap().get("text-align").value){case"start":{const t=new d(g),e=g.computedStyleMap().get("padding-inline-start");g.attributeStyleMap.set("padding-inline-start",CSS.px(Math.round(t.getWidth())).sub(CSS.px(s(this,n))).div(2).add(e));break}case"end":{const t=new d(g),e=g.computedStyleMap().get("padding-inline-end");g.attributeStyleMap.set("padding-inline-end",CSS.px(Math.round(t.getWidth())).sub(CSS.px(s(this,n))).div(2).add(e));break}}else switch(getComputedStyle(g,"").textAlign){case"start":{const t=new d(g),e=getComputedStyle(g).paddingInlineStart;g.style.paddingInlineStart=`calc((${String(Math.round(t.getWidth()))}px - ${s(this,n)}px) / 2 + ${e})`;break}case"end":{const t=new d(g),e=getComputedStyle(g).paddingInlineEnd;g.style.paddingInlineEnd=`calc((${String(Math.round(t.getWidth()))}px - ${s(this,n)}px) / 2 + ${e})`;break}}g.title=a,g.textContent=s(this,e)}t[h]=a}!a&&l.includes(h)&&r>1&&1===o&&(a=!0),h++}a&&(l.length=0),r=o}o>1&&o--,p++}}}unConvert(){for(const n of s(this,t).querySelectorAll("tbody td")){const t=n.firstChild;if(null!==t&&t.nodeValue===s(this,e)){if(s(this,i))switch(n.computedStyleMap().get("text-align").value){case"start":n.attributeStyleMap.delete("padding-inline-start");break;case"end":n.attributeStyleMap.delete("padding-inline-end")}else switch(getComputedStyle(n,"").textAlign){case"start":n.style.paddingInlineStart="";break;case"end":n.style.paddingInlineEnd=""}n.textContent=n.title,n.removeAttribute("title")}}}}t=new WeakMap,e=new WeakMap,n=new WeakMap,i=new WeakMap;
//# sourceMappingURL=TableCellDitto.min.js.map